stages:

  download_dataset:
    cmd: python src/download_file.py ${dataset.link} -o ${dataset.root}/${dataset.archive_name}
    deps:
      - src/download_file.py
    params:
      - dataset.link
      - dataset.root
      - dataset.archive_name
    outs:
      - ${dataset.root}/${dataset.archive_name}

  extract_dataset:
    cmd: unzip -n ${dataset.root}/${dataset.archive_name} -d ${dataset.root} > /dev/null
    deps:
      - ${dataset.root}/${dataset.archive_name}
    params:
      - dataset.archive_name
      - dataset.root    
      - dataset.name 
    outs:
      - ${dataset.root}/${dataset.name}

  download_model:
    cmd: python src/download_file.py ${model.checkpoint_link} -o ${model.checkpoint}
    deps:
      - src/download_file.py
    outs:
      - ${model.checkpoint}

  get_base_model:
    cmd: python src/setup_model.py ${model.config_root}/${model.name} ${model.config_workdir}/${model.name} --no-modify
    params:
      - model.config_root
      - model.config_workdir
      - model.name
    outs:
      - ${model.config_workdir}/${model.name}

  setup_model:
    cmd: python src/setup_model.py ${model.config_workdir}/${model.name} ${model.config_workdir}/${model.new_name}
    deps:
      - ${model.config_workdir}/${model.name}
      - ${dataset.definition}
      - src/setup_model.py  
      - src/cfg_modification.py
      - .env
    params:
      - model.config_workdir
      - model.name
      - model.new_name
    outs:
      - ${model.config_workdir}/${model.new_name}

  train_model:
    cmd: python src/train.py ${model.config_workdir}/${model.new_name}
    deps:
      - ${dataset.root}/${dataset.name}
      - ${model.checkpoint}
      - ${model.config_workdir}/${model.new_name}
    outs:
      - eval/model_epoch_${running.max_epoch}.pth

  test_detector:
    cmd: python src/test.py ${model.config_workdir}/${model.new_name} eval/model_epoch_${running.max_epoch}.pth --eval mAP
    deps:
      - ${model.config_workdir}/${model.new_name}
      - eval/model_epoch_${running.max_epoch}.pth
